---
title: "템플릿"
subtitle: "쿼토 shinylive 문서 템플릿"
---

:::{.callout-note}
### 출처

[Template for r-shinylive Quarto document](https://quarto.thecoatlessprofessor.com/r-shinylive-demo/template-r-shinylive.html)
:::

# 템플릿

`````md
---
title: "헬로월드 템플릿"
subtitle: "쿼토 shinylive 첫번째 문서"
format:
  html:
    resources: 
      - shinylive-sw.js
filters:
  - shinylive
---

```{shinylive-r}
#| standalone: true

ui <- ...

server <- function(input, output, session) {
  ...
}

shinyApp(ui, server)
```

`````

# 환경설정

## 패키지 설치

`pak`은 `install.packages()`, `devtools::install_github()` 패키지 설치 기능을 새롭게 구현한 패키지다. `r-shinylive` 패키지를 설치한다.

```{r}
#| eval: false

install.packages("pak")
pak::pak("posit-dev/r-shinylive")
```

## 쿼토 확장프로그램

쿼토 문서 제작에 필요한 확장프로그램을 설치한다.
신규 쿼토 프로젝트를 시작하는 경우와 기존 쿼토 프로젝트에 `shinylive` 문서 추가를 위해 확장프로그램 추가설치로 나뉜다.

```bash
$ quarto create project default    # 신규 쿼토 shinylive 프로젝트
$ quarto add quarto-ext/shinylive  # 쿼토 프로젝트에 shinylive 기능 문서추가
```

## `.qmd` YAML 추가

YAML 에 쿼토 확장프로그램(필터)를 추가한다.

```bash
filters:
  - shinylive
```

## 쿼토 문서 템플릿

`````{{shinylive}}
---
title: "쿼토 shinylive는 처음이지!!!"
filters:
  - shinylive
---

```{shinylive-r}
#| standalone: true

library(shiny)

# Shiny UI 정의
ui <- fluidPage(
  # UI 구성요소 추가
)

# Shiny 서버 로직 추가
server <- function(input, output, session) {
  # shiny 서버 코드 추가
}

# Shiny 앱 실행
shinyApp(ui, server)
```
`````

## 문서 컴파일

쿼토문서를 컴파일하여 실행한다.

```bash
$ quarto preview helloworld.qmd --no-browser --no-watch-inputs
```

:::{.panel-tabset}
### 실행

![](images/quarto_shinylive_terminal.png)

### 실행결과

:::{layout-ncol=2}

![](images/helloworld_loading.png)

![](images/helloworld_run.png)

:::

:::
